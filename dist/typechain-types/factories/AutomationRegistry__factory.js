"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutomationRegistry__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_minimumFunding",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "upkeepId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "FundsAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "upkeepId",
                type: "uint256",
            },
        ],
        name: "UpkeepCancelled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "upkeepId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "gasUsed",
                type: "uint256",
            },
        ],
        name: "UpkeepPerformed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "upkeepId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "targetContract",
                type: "address",
            },
        ],
        name: "UpkeepRegistered",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_upkeepId",
                type: "uint256",
            },
        ],
        name: "addFunds",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_upkeepId",
                type: "uint256",
            },
        ],
        name: "cancelUpkeep",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "checkData",
                type: "bytes",
            },
        ],
        name: "checkUpkeep",
        outputs: [
            {
                internalType: "bool",
                name: "needsExecution",
                type: "bool",
            },
            {
                internalType: "bytes",
                name: "performData",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_upkeepId",
                type: "uint256",
            },
        ],
        name: "getUpkeepInfo",
        outputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "targetContract",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "active",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "lastExecuted",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "interval",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minimumFunding",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_upkeepId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_performData",
                type: "bytes",
            },
        ],
        name: "performUpkeep",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_targetContract",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_checkData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_interval",
                type: "uint256",
            },
        ],
        name: "registerUpkeep",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "upkeepCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "upkeeps",
        outputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "targetContract",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "checkData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "active",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "lastExecuted",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "interval",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162001a5538038062001a558339818101604052810190620000379190620000c6565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050620000f8565b600080fd5b6000819050919050565b620000a0816200008b565b8114620000ac57600080fd5b50565b600081519050620000c08162000095565b92915050565b600060208284031215620000df57620000de62000086565b5b6000620000ef84828501620000af565b91505092915050565b61194d80620001086000396000f3fe6080604052600436106100915760003560e01c80638be59218116100595780638be592181461019a5780638da5cb5b146101dd5780638dda546214610208578063be99970514610233578063c80480221461024f57610091565b806329e0a8411461009657806346b7707d146100d85780636e04ff0d146101085780637323f3d0146101465780637bbaf1ea14610171575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610d86565b610278565b6040516100cf96959493929190610e1e565b60405180910390f35b6100f260048036038101906100ed9190610f10565b610318565b6040516100ff9190610f84565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190610f9f565b610572565b60405161013d92919061107c565b60405180910390f35b34801561015257600080fd5b5061015b61069c565b6040516101689190610f84565b60405180910390f35b34801561017d57600080fd5b50610198600480360381019061019391906110ac565b6106a2565b005b3480156101a657600080fd5b506101c160048036038101906101bc9190610d86565b610974565b6040516101d4979695949392919061110c565b60405180910390f35b3480156101e957600080fd5b506101f2610a8b565b6040516101ff9190611182565b60405180910390f35b34801561021457600080fd5b5061021d610ab1565b60405161022a9190610f84565b60405180910390f35b61024d60048036038101906102489190610d86565b610ab7565b005b34801561025b57600080fd5b5061027660048036038101906102719190610d86565b610b80565b005b600080600080600080600080600089815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600301548360040160009054906101000a900460ff16846005015485600601549650965096509650965096505091939550919395565b600060025434101561035f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610356906111fa565b60405180910390fd5b60006001600081548092919061037490611249565b9190505590506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013481526020016001151581526020014281526020018481525060008083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816104d591906114cc565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005015560c082015181600601559050503373ffffffffffffffffffffffffffffffffffffffff16817f81587c9e5a0aabbf4bcd8148b4cb2916202290ff12b7af86c0afb92cc1bacc658860405161055e9190611182565b60405180910390a380915050949350505050565b60006060600084848101906105879190610d86565b9050600080600083815260200190815260200160002090508060040160009054906101000a900460ff166105d257600060405180602001604052806000815250935093505050610695565b806006015481600501546105e6919061159e565b42101561060a57600060405180602001604052806000815250935093505050610695565b620186a03a61061991906115d2565b8160030154101561064157600060405180602001604052806000815250935093505050610695565b6001868681818080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905090509350935050505b9250929050565b60015481565b600080600085815260200190815260200160002090508060040160009054906101000a900460ff16610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090611660565b60405180910390fd5b60008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684846040516024016107599291906116bc565b6040516020818303038152906040527f4585e33b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107e3919061171c565b6000604051808303816000865af19150503d8060008114610820576040519150601f19603f3d011682016040523d82523d6000602084013e610825565b606091505b5050905080610869576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108609061177f565b60405180910390fd5b428260050181905550600062030d40905060003a8261088891906115d2565b905080846003015410156108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c8906117eb565b60405180910390fd5b808460030160008282546108e5919061180b565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610932573d6000803e3d6000fd5b50867f9fbc2aeb5bf6200e5499d345acddf1dd462c37becb4673d661250b89ced7ff6a836040516109639190610f84565b60405180910390a250505050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546109e3906112ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0f906112ef565b8015610a5c5780601f10610a3157610100808354040283529160200191610a5c565b820191906000526020600020905b815481529060010190602001808311610a3f57829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060050154908060060154905087565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008082815260200190815260200160002060040160009054906101000a900460ff16610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090611660565b60405180910390fd5b346000808381526020019081526020016000206003016000828254610b3e919061159e565b92505081905550807ff5e4934928a1e45d88c7a5aa2661fe0a801ca5017922e15122d74f1880155e1a34604051610b759190610f84565b60405180910390a250565b600080600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1f9061188b565b60405180910390fd5b8060040160009054906101000a900460ff16610c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c70906118f7565b60405180910390fd5b60008160040160006101000a81548160ff021916908315150217905550600081600301549050600082600301819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d13573d6000803e3d6000fd5b50827fa8d8937df02c88ee443e3a549ab8653fbc3dfdc901e9426a1e50e06125c6bb0760405160405180910390a2505050565b600080fd5b600080fd5b6000819050919050565b610d6381610d50565b8114610d6e57600080fd5b50565b600081359050610d8081610d5a565b92915050565b600060208284031215610d9c57610d9b610d46565b5b6000610daa84828501610d71565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dde82610db3565b9050919050565b610dee81610dd3565b82525050565b610dfd81610d50565b82525050565b60008115159050919050565b610e1881610e03565b82525050565b600060c082019050610e336000830189610de5565b610e406020830188610de5565b610e4d6040830187610df4565b610e5a6060830186610e0f565b610e676080830185610df4565b610e7460a0830184610df4565b979650505050505050565b610e8881610dd3565b8114610e9357600080fd5b50565b600081359050610ea581610e7f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ed057610ecf610eab565b5b8235905067ffffffffffffffff811115610eed57610eec610eb0565b5b602083019150836001820283011115610f0957610f08610eb5565b5b9250929050565b60008060008060608587031215610f2a57610f29610d46565b5b6000610f3887828801610e96565b945050602085013567ffffffffffffffff811115610f5957610f58610d4b565b5b610f6587828801610eba565b93509350506040610f7887828801610d71565b91505092959194509250565b6000602082019050610f996000830184610df4565b92915050565b60008060208385031215610fb657610fb5610d46565b5b600083013567ffffffffffffffff811115610fd457610fd3610d4b565b5b610fe085828601610eba565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561102657808201518184015260208101905061100b565b60008484015250505050565b6000601f19601f8301169050919050565b600061104e82610fec565b6110588185610ff7565b9350611068818560208601611008565b61107181611032565b840191505092915050565b60006040820190506110916000830185610e0f565b81810360208301526110a38184611043565b90509392505050565b6000806000604084860312156110c5576110c4610d46565b5b60006110d386828701610d71565b935050602084013567ffffffffffffffff8111156110f4576110f3610d4b565b5b61110086828701610eba565b92509250509250925092565b600060e082019050611121600083018a610de5565b61112e6020830189610de5565b81810360408301526111408188611043565b905061114f6060830187610df4565b61115c6080830186610e0f565b61116960a0830185610df4565b61117660c0830184610df4565b98975050505050505050565b60006020820190506111976000830184610de5565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64696e67000000000000000000000000600082015250565b60006111e460148361119d565b91506111ef826111ae565b602082019050919050565b60006020820190508181036000830152611213816111d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125482610d50565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112865761128561121a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061130757607f821691505b60208210810361131a576113196112c0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611345565b61138c8683611345565b95508019841693508086168417925050509392505050565b6000819050919050565b60006113c96113c46113bf84610d50565b6113a4565b610d50565b9050919050565b6000819050919050565b6113e3836113ae565b6113f76113ef826113d0565b848454611352565b825550505050565b600090565b61140c6113ff565b6114178184846113da565b505050565b5b8181101561143b57611430600082611404565b60018101905061141d565b5050565b601f8211156114805761145181611320565b61145a84611335565b81016020851015611469578190505b61147d61147585611335565b83018261141c565b50505b505050565b600082821c905092915050565b60006114a360001984600802611485565b1980831691505092915050565b60006114bc8383611492565b9150826002028217905092915050565b6114d582610fec565b67ffffffffffffffff8111156114ee576114ed611291565b5b6114f882546112ef565b61150382828561143f565b600060209050601f8311600181146115365760008415611524578287015190505b61152e85826114b0565b865550611596565b601f19841661154486611320565b60005b8281101561156c57848901518255600182019150602085019450602081019050611547565b868310156115895784890151611585601f891682611492565b8355505b6001600288020188555050505b505050505050565b60006115a982610d50565b91506115b483610d50565b92508282019050808211156115cc576115cb61121a565b5b92915050565b60006115dd82610d50565b91506115e883610d50565b92508282026115f681610d50565b9150828204841483151761160d5761160c61121a565b5b5092915050565b7f55706b656570206e6f7420616374697665000000000000000000000000000000600082015250565b600061164a60118361119d565b915061165582611614565b602082019050919050565b600060208201905081810360008301526116798161163d565b9050919050565b82818337600083830152505050565b600061169b8385610ff7565b93506116a8838584611680565b6116b183611032565b840190509392505050565b600060208201905081810360008301526116d781848661168f565b90509392505050565b600081905092915050565b60006116f682610fec565b61170081856116e0565b9350611710818560208601611008565b80840191505092915050565b600061172882846116eb565b915081905092915050565b7f54617267657420636f6e747261637420657865637574696f6e206661696c6564600082015250565b600061176960208361119d565b915061177482611733565b602082019050919050565b600060208201905081810360008301526117988161175c565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006117d560128361119d565b91506117e08261179f565b602082019050919050565b60006020820190508181036000830152611804816117c8565b9050919050565b600061181682610d50565b915061182183610d50565b92508282039050818111156118395761183861121a565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616e63656c0000000000000000000000600082015250565b600061187560158361119d565b91506118808261183f565b602082019050919050565b600060208201905081810360008301526118a481611868565b9050919050565b7f55706b65657020616c72656164792063616e63656c6c65640000000000000000600082015250565b60006118e160188361119d565b91506118ec826118ab565b602082019050919050565b60006020820190508181036000830152611910816118d4565b905091905056fea2646970667358221220360b32df74bf1af4b55d234bc5b828a786965d736c19482b13cc2f67b6f8ab9064736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class AutomationRegistry__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_minimumFunding, overrides) {
        return super.getDeployTransaction(_minimumFunding, overrides || {});
    }
    deploy(_minimumFunding, overrides) {
        return super.deploy(_minimumFunding, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AutomationRegistry__factory = AutomationRegistry__factory;
AutomationRegistry__factory.bytecode = _bytecode;
AutomationRegistry__factory.abi = _abi;
